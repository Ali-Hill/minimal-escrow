packages: .
          apps-compat-contractmodel
          cooked-contractmodel

index-state: 2023-05-01T00:00:00Z
index-state:
  , hackage.haskell.org 2023-05-01T00:00:00Z
  , cardano-haskell-packages 2023-05-10T00:00:00Z

-- Custom repository for cardano haskell packages
-- See https://github.com/input-output-hk/cardano-haskell-packages on how to use CHaP in a Haskell project.
repository cardano-haskell-packages
  url: https://input-output-hk.github.io/cardano-haskell-packages
  secure: True
  root-keys:
    3e0cce471cf09815f930210f7827266fd09045445d65923e6d0238a6cd15126f
    443abb7fb497a134c343faf52f0b659bd7999bc06b7f63fa76dc99d631f9bea1
    a86a1f6ce86c449c46666bda44268677abf29b5b2d2eb5ec7af903ec2f117a82
    bcec67e8e99cabfa7764d75ad9b158d72bfacf70ca1d0ec8bc6b4406d1bf8413
    c00aae8461a256275598500ea0e187588c35a5d5d7454fb57eac18d9edb86a56
    d4a35cd3121aa00d18544bb0ac01c3e1691d618f462c46129271bccf39f7e8ee

source-repository-package
  type: git
  location: https://github.com/tweag/cooked-validators.git
  tag: b20ed00ebc5321368746672f60ddd0d130db7bcf
  --sha256: 1ild5dh03j2vnzzd2w1vg9j38srgsc4iyfph973hp9b1yhvqfkky

-- maybe needed
package cardano-crypto-praos
  flags: -external-libsodium-vrf

source-repository-package
  type: git
  location: https://github.com/input-output-hk/plutus-apps.git
  tag: 68c37212b76c68ab4ee566b5e27eaf4c30396671
  --sha256: 07dhd6njf6dlw6w5h9v0yv50d1c91yhsz56vz8glid8xl9warc49
  subdir:
    cardano-node-emulator
    cardano-streaming
    freer-extras
    marconi-core
    marconi-chain-index
    pab-blockfrost
    plutus-chain-index
    plutus-chain-index-core
    plutus-contract
    plutus-pab
    plutus-ledger
    plutus-script-utils
    plutus-tx-constraints

-- We never, ever, want this.
write-ghc-environment-files: never

-- Always build tests and benchmarks.
tests: true
benchmarks: true

-- The only sensible test display option, since it allows us to have colourized
-- 'tasty' output.
test-show-details: direct

-- cardano-addresses unit tests bring in some version constraint conflicts:
--
-- * it has strict aeson < 1.5 dep - this will be fixed in the next release.
allow-newer:
  , ekg:aeson
  , ekg-json:aeson
  , threepenny-gui:aeson
  , monoidal-containers:aeson
  , servant-foreign:lens
  , size-based:template-haskell
  , snap-server:attoparsec
  , ekg:aeson
  , ekg-json:aeson
  , openapi3:aeson
  , servant:aeson
  , servant-client-core:aeson
  , servant-server:aeson
  , servant-foreign:lens
  , blockfrost-api:lens

constraints:
    hedgehog           >= 1.0
  , bimap              >= 0.4.0
  , libsystemd-journal >= 1.4.4
  , systemd            >= 2.3.0
    -- systemd-2.3.0 requires at least network 3.1.1.0 but it doesn't declare
    -- that dependency
  , network          >= 3.1.1.0
  , HSOpenSSL        >= 0.11.7.2
  , algebraic-graphs < 0.7
  , protolude        < 0.3.1
    -- TODO: these should be set in cabal files, but avoiding setting them in lower dependencies for initial CHaP release
  , cardano-prelude            == 0.1.0.0
  , base-deriving-via          == 0.1.0.0
  , cardano-binary             == 1.5.0
  , cardano-binary-test        == 1.3.0
  , cardano-data               == 0.1.0.0
  , cardano-crypto-class       == 2.0.0.0.1
  , cardano-crypto-praos       == 2.0.0
  , cardano-crypto-tests       == 2.0.0
  , cardano-crypto-wrapper     == 1.3.0
  , cardano-slotting           == 0.1.0.0
  , measures                   == 0.1.0.0
  , orphans-deriving-via       == 0.1.0.0
  , strict-containers          == 0.1.0.0
  , plutus-core                == 1.0.0.1
  , plutus-ledger-api          == 1.0.0.0
  , plutus-tx                  == 1.0.0.0
  , plutus-tx-plugin           == 1.0.0.0
  , prettyprinter-configurable == 0.1.0.0
  , plutus-ghc-stub            == 8.6.5
  , word-array                 == 0.1.0.0

  -- These are needed because later version don't compile with the dependencies above
  , cardano-ledger-byron      == 0.1.0.0
  , cardano-ledger-core       == 0.1.0.0
  , cardano-ledger-alonzo     == 0.1.0.0
  , cardano-ledger-shelley    == 0.1.0.0
  , cardano-ledger-babbage    == 0.1.0.0
  , cardano-ledger-shelley-ma == 0.1.0.0
  -- Without this cabal tries to pull in cardano-ledger-conway for some reason!?
  , cardano-ledger-conway == 0.0

  -- These are lifted from plutus-apps
  , protolude                    <  0.3.1
  , cardano-binary               <  1.5.0.1
  , cardano-crypto-class         >  2.0.0.0
  , algebraic-graphs             <  0.7
  , cardano-crypto-class         <  2.0.0.1
  , cardano-prelude              <  0.1.0.1
  , io-classes                   <  0.3.0.0
  , typed-protocols              == 0.1.0.0
  , resource-pool                <  0.4.0.0
  , ouroboros-consensus-protocol == 0.1.0.1

-- The plugin will typically fail when producing Haddock documentation. However,
-- in this instance you can simply tell it to defer any errors to runtime (which
-- will never happen since you're building documentation).
--
-- So, any package using 'PlutusTx.compile' in the code for which you need to
-- generate haddock documentation should use the following 'haddock-options'.
package plutus-ledger
  haddock-options: "--optghc=-fplugin-opt PlutusTx.Plugin:defer-errors"
package plutus-script-utils
  haddock-options: "--optghc=-fplugin-opt PlutusTx.Plugin:defer-errors"
package plutus-contract
  haddock-options: "--optghc=-fplugin-opt PlutusTx.Plugin:defer-errors"
package plutus-contract-model
  haddock-options: "--optghc=-fplugin-opt PlutusTx.Plugin:defer-errors"

-- These packages appear in our dependency tree and are very slow to build.
-- Empirically, turning off optimization shaves off ~50% build time.
-- It also mildly improves recompilation avoidance.
-- For dev work we don't care about performance so much, so this is okay.
package cardano-ledger-alonzo
  optimization: False
package ouroboros-consensus-shelley
  optimization: False
package ouroboros-consensus-cardano
  optimization: False
package cardano-api
  optimization: False
package cardano-wallet
  optimization: False
package cardano-wallet-core
  optimization: False
package cardano-wallet-cli
  optimization: False
package cardano-wallet-launcher
  optimization: False
package cardano-wallet-core-integration
  optimization: False

-- Direct dependency.
-- Compared to others, cardano-wallet doesn't bump dependencies very often.
-- Making it a good place to start when bumping dependencies.
-- As, for example, bumping the node first highly risks breaking API with the wallet.
-- Unless early bug fixes are required, this is fine as the wallet tracks stable releases of the node.
-- And it is indeed nice for plutus-apps to track stable releases of the node too.
--
-- The current version is dated 2022/08/10
source-repository-package
    type: git
    location: https://github.com/input-output-hk/cardano-wallet
    tag: 18a931648550246695c790578d4a55ee2f10463e
    subdir:
      lib/cli
      lib/core
      lib/core-integration
      lib/dbvar
      lib/launcher
      lib/numeric
      lib/shelley
      lib/strict-non-empty-containers
      lib/test-utils
      lib/text-class
    --sha256: 0i40hp1mdbljjcj4pn3n6zahblkb2jmpm8l4wnb36bya1pzf66fx

-- Should follow cardano-wallet.
source-repository-package
    type: git
    location: https://github.com/input-output-hk/cardano-addresses
    tag: b7273a5d3c21f1a003595ebf1e1f79c28cd72513
    subdir:
      -- cardano-addresses-cli
      command-line
      -- cardano-addresses
      core
    --sha256: 129r5kyiw10n2021bkdvnr270aiiwyq58h472d151ph0r7wpslgp

-- This is needed because we rely on an unreleased branch of
-- cardano-ledger-alonzo. The feature we need
-- (evaluateTransactionExecutionUnitsWithLogs) in only included from
-- cardano-ledger-alonzo version 1.0.0.0
-- See https://github.com/input-output-hk/cardano-ledger/pull/3111
source-repository-package
    type: git
    location: https://github.com/input-output-hk/cardano-ledger
    tag: da3e9ae10cf9ef0b805a046c84745f06643583c2
    subdir:
      eras/alonzo/impl
      eras/alonzo/test-suite
      eras/babbage/impl
      eras/babbage/test-suite
      eras/byron/chain/executable-spec
      eras/byron/crypto
      eras/byron/crypto/test
      eras/byron/ledger/executable-spec
      eras/byron/ledger/impl
      eras/byron/ledger/impl/test
      eras/shelley/impl
      eras/shelley/test-suite
      eras/shelley-ma/impl
      eras/shelley-ma/test-suite
      libs/cardano-ledger-core
      libs/cardano-ledger-pretty
      libs/cardano-protocol-tpraos
      libs/cardano-data
      libs/vector-map
      libs/set-algebra
      libs/small-steps
      libs/small-steps-test
      libs/non-integral
    --sha256: 1jg1h05gcms119mw7fz798xpj3hr5h426ga934vixmgf88m1jmfx

source-repository-package
    type: git
    location: https://github.com/input-output-hk/quickcheck-contractmodel
    tag: 344a44b1103e0558de7b032927dc98ea55028e4d
    subdir:
      quickcheck-contractmodel
      quickcheck-threatmodel
    --sha256: tf4+XHiVTs03KYu6rsCatjwpOWeCwUEkdetGMbY3Wdk=

source-repository-package
    type: git
    location: https://github.com/input-output-hk/quickcheck-dynamic
    tag: 7243e632d5895f72809398d9a7b988eb6775ddf6
    subdir:
      quickcheck-dynamic-iosim
      quickcheck-dynamic
    --sha256: QlHx7aNYO2L43JOruJlL/d/STYKve2apRSGG7KEGFAw=

source-repository-package
    type: git
    location: https://github.com/Ali-Hill/plutus-contract-certification-cooked/
    tag: 5617867c2fedc5f5cb100b9c843c62f7e3b493a0
    --sha256: Vp7EvFmLI1dX6pCy+CO3e1ncvQ5Q6cnvgkV8nu8VVjs=
